/*
 * Set up the statsd-client.
 *
 * Requires the `hostname`. Options currently allows for `port` and `debug` to
 * be set.
 */

var util = require('util');

var StatsDClient = require('./statsd-client');


function DatadogClient(options) {
    StatsDClient.call(this);
}

util.inherits(DatadogClient, StatsDClient);

/* Generic send-things-to-datadog
 */
DatadogClient._sendMetric = function (name, value, typeChar, sampleRate, tags) {
    var text = this.options.prefix + name + ':' + value + '|' + typeChar;

    var _sampleRate = sampleRate;
    var _tags = tags;
    if (arguments.length === 3) {
        _tags = sampleRate;
        _sampleRate = undefined;
    }

    if (_sampleRate) { text += '|@' + _sampleRate; }

    if (_tags) {
        text += '|#' + Object.keys(_tags).map(function (tag) {
            return tag + ':' + _tags[tag];
        }).join(',');
    }

    this._socket.send(text);
}

/*
 * Get a "child" client with a sub-prefix.
 */
StatsDClient.prototype.getChildClient = function (extraPrefix) {
    return new DatadogClient({
        prefix: this.options.prefix + extraPrefix,
        _socket: this._socket
    });
};



module.exports = DatadogClient;
